<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-configuration PUBLIC
        "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">


<!--　<!DOCTYPE hibernate-configuration PUBLIC-->
<!--"-//Hibernate/Hibernate Configuration DTD 3.0//EN"-->
<!--"http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd">-->
<hibernate-configuration>
    <session-factory>
        <!-- 配置连接数据库的基本信息 -->
        <!--<property name="connection.username">root</property>-->
        <!--<property name="connection.password">123456</property>-->
        <!--<property name="hibernate.connection.provider_class">org.hibernate.connection.C3P0ConnectionProvider</property>-->
        <property name="connection.username">root</property>
        <property name="connection.password">root</property>
        <property name="connection.driver_class">com.mysql.jdbc.Driver</property>
        <property name="connection.url">jdbc:mysql://120.78.148.180:3306/imchatdb</property>

        <!-- 配置hibernate的基本信息 -->
        <!-- hibernate所使用的数据库方言 -->
        <property name="dialect">org.hibernate.dialect.MySQLMyISAMDialect</property>
        <!-- 执行操作时是否在控制台打印sql -->
        <property name="show_sql">true</property>
        <!-- 是否对sql进行格式化 -->
        <property name="format_sql">true</property>
        <!-- 指定自动生成数据表的策略 -->
        <property name="hibernate.hbm2ddl.auto">update</property>
        <!--常用属性有create、update-->
        <!--create：-->
        <!--每次加载hibernate时都会删除上一次的生成的表，然后根据你的model类再重新来生成新表，哪怕两次没有任何改变也要这样执行，这就是导致数据库表数据丢失的一个重要原因。-->
        <!--create-drop ：-->
        <!--每次加载hibernate时根据model类生成表，但是sessionFactory一关闭,表就自动删除。-->
        <!--update：-->
        <!--最常用的属性，第一次加载hibernate时根据model类会自动建立起表的结构（前提是先建立好数据库），以后加载hibernate时根据model类自动更新表结构，即使表结构改变了但表中的行仍然存在不会删除以前的行。要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等应用第一次运行起来后才会。-->
        <!--validate ：-->
        <!--每次加载hibernate时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。-->

        <!-- 指定关联的.hbm.xml文件 -->
        <mapping resource="com/baige/models/User.hbm.xml"/>
        <!--<mapping class="com.baige.models.ChatMessage"/>-->
        <mapping resource="com/baige/models/ChatMessage.hbm.xml"/>
        <mapping resource="com/baige/models/Friend.hbm.xml"/>
        <mapping resource="com/baige/models/Files.hbm.xml"/>
        <!--<mapping class="com.baige.models.ChatMessage"/>-->
        <!--<mapping class="com.baige.models.User"/>-->
    </session-factory>
</hibernate-configuration>
